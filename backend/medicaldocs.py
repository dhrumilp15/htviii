# -*- coding: utf-8 -*-
"""medicaldocs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gtKCENJwYnIphfZ90zIwzuHB23ZlUJB-
"""

import cv2

from google.colab import files
uploaded = files.upload()

# %matplotlib inline

import numpy as np

from matplotlib import pyplot as plt

img = cv2.imread("bloodwork.jpg", 0)
print(img.shape)

plt.rcParams['figure.figsize'] = [25, 12]
plt.imshow(img)

def box_extraction(img):

  (thresh, img_bin) = cv2.threshold(img, 128, 255,cv2.THRESH_BINARY | cv2.THRESH_OTSU)  # Thresholding the image
  img_bin = 255-img_bin  # Invert the image

  sobelx = cv2.Sobel(img_bin,cv2.CV_64F,1,0,ksize=5)
  sobely = cv2.Sobel(img_bin,cv2.CV_64F,0,1,ksize=5)
  
  return np.sqrt(sobelx**2 + sobely**2)

new_img = box_extraction(img)

plt.imshow(new_img)

bloodwork = cv2.imread("bloodwork.jpg", 0)
bloodwork = 255-bloodwork

plt.imshow(img)

new_img = box_extraction(img)
plt.imshow(new_img)
# Initiate FAST object with default values
fast = cv2.FastFeatureDetector_create()

# find and draw the keypoints
kp = fast.detect(new_img,None)
img2 = cv2.drawKeypoints(img, kp, None, color=(255,0,0), flags=cv2.DRAW_MATCHES_FLAGS_DRAW_RICH_KEYPOINTS)

print("Threshold: ", fast.getThreshold());
print("nonmaxSuppression: ", fast.getNonmaxSuppression());
print("neighborhood: ", fast.getType());
print("Total Keypoints with nonmaxSuppression: ", len(kp));

plt.imshow(img2)



